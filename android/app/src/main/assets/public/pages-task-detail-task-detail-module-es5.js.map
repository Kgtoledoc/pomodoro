{"version":3,"sources":["webpack:///src/app/pages/task-detail/task-detail.page.scss","webpack:///src/app/pages/task-detail/task-detail-routing.module.ts","webpack:///src/app/pages/task-detail/task-detail.module.ts","webpack:///src/app/pages/task-detail/task-detail.page.ts","webpack:///src/app/pages/task-detail/task-detail.page.html"],"names":["routes","path","component","TaskDetailPageRoutingModule","imports","forChild","exports","TaskDetailPageModule","declarations","TaskDetailPage","router","route","queryParams","subscribe","params","console","log","special","task","JSON","parse","subtaskInput","subtaskTitle","navigate","subtask","title","id","isChecked","subtaskArray","push","saveSubtaskArray","filter","e","taskChanged","scheduledTask","localStorage","getItem","index","findIndex","i","splice","setItem","stringify","selector","template"],"mappings":"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","file":"pages-task-detail-task-detail-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YXNrLWRldGFpbC5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskDetailPage } from './task-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskDetailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskDetailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskDetailPageRoutingModule } from './task-detail-routing.module';\n\nimport { TaskDetailPage } from './task-detail.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TaskDetailPageRoutingModule\n  ],\n  declarations: [TaskDetailPage]\n})\nexport class TaskDetailPageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\n@Component({\n  selector: \"app-task-detail\",\n  templateUrl: \"./task-detail.page.html\",\n  styleUrls: [\"./task-detail.page.scss\"],\n})\nexport class TaskDetailPage implements OnInit {\n  subtaskInput: Boolean;\n  subtaskTitle: String;\n  task: any;\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.queryParams.subscribe((params) => {\n      console.log(params);\n      if (params && params.special) {\n        this.task = JSON.parse(params.special);\n      }\n      console.log(this.task);\n    });\n    this.subtaskInput = false;\n    this.subtaskTitle = \"\";\n  }\n\n  closeTaskDetail() {\n    this.router.navigate([\"\"]);\n  }\n\n  //add subtask\n  //refresh the task array with the new task object - other subtask\n\n  addSubtask() {\n    console.log(\"Add Subtask\");\n    this.subtaskInput = true;\n  }\n\n  enterSubtask() {\n    console.log(\"subtask \" + this.subtaskTitle);\n    let subtask = {\n      title: this.subtaskTitle,\n      id: uuidv4(),\n      isChecked: false,\n    };\n    this.task.subtaskArray.push(subtask);\n    this.subtaskTitle = \"\";\n    this.subtaskInput = false;\n\n    this.saveSubtaskArray(this.task);\n  }\n\n  check(task) {\n    console.log(task);\n    this.saveSubtaskArray(this.task);\n  }\n\n  // Function to save the new content of task into scheduledTask\n\n  // Delete task function\n\n  delete(subtask) {\n    this.task.subtaskArray = this.task.subtaskArray.filter((e) => {\n      return subtask.id != e.id;\n    });\n\n    this.saveSubtaskArray(this.task);\n  }\n\n  saveSubtaskArray(taskChanged) {\n    // Load the content of TaskArray\n    let scheduledTask = JSON.parse(localStorage.getItem(\"scheduledTasks\"));\n    // Find the index of object into array\n    let index = scheduledTask.findIndex((task, i) => {\n      return task.id === taskChanged.id;\n    });\n    // Replace the object into index with the new object or only push the task\n    scheduledTask.splice(index, 1, taskChanged);\n    console.log(\"Scheduled Task \", scheduledTask);\n    // Save the scheduledTask into LocalStorage\n    localStorage.setItem(\"scheduledTasks\", JSON.stringify(scheduledTask));\n  }\n\n  // add the enter subtask into another way. Could be a new modal o like a popover or alert\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tasks\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Task Detail</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-list>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label>Title</ion-label>\\n      <h3>{{this.task.title}}</h3>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label>Date</ion-label>\\n      <h3>{{task.date | date:'shortTime'}}</h3>\\n    </ion-item>\\n  </ion-list>\\n\\n  <ion-list>\\n    <ion-list-header lines=\\\"none\\\">\\n      <ion-label>Subtask</ion-label>\\n      <ion-button shape=\\\"round\\\" expand=\\\"block\\\" (click)=\\\"addSubtask()\\\">\\n        <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-list-header>\\n    <ion-item-sliding *ngFor=\\\"let subtask of this.task.subtaskArray\\\">\\n      <ion-item lines=\\\"none\\\">\\n        <ion-checkbox\\n          slot=\\\"start\\\"\\n          [(ngModel)]=\\\"subtask.isChecked\\\"\\n          checked=\\\"{{subtask.isChecked}}\\\"\\n          (ionChange)=\\\"check(task)\\\"\\n        ></ion-checkbox>\\n\\n        <p>{{subtask.title}}</p>\\n      </ion-item>\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option (click)=\\\"delete(subtask)\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n        </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n</ion-content>\\n<ion-footer>\\n  <ng-container *ngIf=\\\"subtaskInput\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"subtaskTitle\\\"\\n          placeholder=\\\"New subtask\\\"\\n        ></ion-input>\\n        <ion-button (click)=\\\"enterSubtask()\\\">+</ion-button>\\n      </ion-item>\\n    </ion-list>\\n  </ng-container>\\n</ion-footer>\\n\";"]}