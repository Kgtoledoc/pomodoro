{"version":3,"sources":["./src/app/pages/task-detail/task-detail.page.scss","./src/app/pages/task-detail/task-detail-routing.module.ts","./src/app/pages/task-detail/task-detail.module.ts","./src/app/pages/task-detail/task-detail.page.ts","./src/app/pages/task-detail/task-detail.page.html"],"names":[],"mappings":"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","file":"pages-task-detail-task-detail-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YXNrLWRldGFpbC5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskDetailPage } from './task-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskDetailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskDetailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskDetailPageRoutingModule } from './task-detail-routing.module';\n\nimport { TaskDetailPage } from './task-detail.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TaskDetailPageRoutingModule\n  ],\n  declarations: [TaskDetailPage]\n})\nexport class TaskDetailPageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\n@Component({\n  selector: \"app-task-detail\",\n  templateUrl: \"./task-detail.page.html\",\n  styleUrls: [\"./task-detail.page.scss\"],\n})\nexport class TaskDetailPage implements OnInit {\n  subtaskInput: Boolean;\n  subtaskTitle: String;\n  task: any;\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.queryParams.subscribe((params) => {\n      console.log(params);\n      if (params && params.special) {\n        this.task = JSON.parse(params.special);\n      }\n      console.log(this.task);\n    });\n    this.subtaskInput = false;\n    this.subtaskTitle = \"\";\n  }\n\n  closeTaskDetail() {\n    this.router.navigate([\"\"]);\n  }\n\n  //add subtask\n  //refresh the task array with the new task object - other subtask\n\n  addSubtask() {\n    console.log(\"Add Subtask\");\n    this.subtaskInput = true;\n  }\n\n  enterSubtask() {\n    console.log(\"subtask \" + this.subtaskTitle);\n    let subtask = {\n      title: this.subtaskTitle,\n      id: uuidv4(),\n      isChecked: false,\n    };\n    this.task.subtaskArray.push(subtask);\n    this.subtaskTitle = \"\";\n    this.subtaskInput = false;\n\n    this.saveSubtaskArray(this.task);\n  }\n\n  check(task) {\n    console.log(task);\n    this.saveSubtaskArray(this.task);\n  }\n\n  // Function to save the new content of task into scheduledTask\n\n  // Delete task function\n\n  delete(subtask) {\n    this.task.subtaskArray = this.task.subtaskArray.filter((e) => {\n      return subtask.id != e.id;\n    });\n\n    this.saveSubtaskArray(this.task);\n  }\n\n  saveSubtaskArray(taskChanged) {\n    // Load the content of TaskArray\n    let scheduledTask = JSON.parse(localStorage.getItem(\"scheduledTasks\"));\n    // Find the index of object into array\n    let index = scheduledTask.findIndex((task, i) => {\n      return task.id === taskChanged.id;\n    });\n    // Replace the object into index with the new object or only push the task\n    scheduledTask.splice(index, 1, taskChanged);\n    console.log(\"Scheduled Task \", scheduledTask);\n    // Save the scheduledTask into LocalStorage\n    localStorage.setItem(\"scheduledTasks\", JSON.stringify(scheduledTask));\n  }\n\n  // add the enter subtask into another way. Could be a new modal o like a popover or alert\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tasks\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Task Detail</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-list>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label>Title</ion-label>\\n      <h3>{{this.task.title}}</h3>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label>Date</ion-label>\\n      <h3>{{task.date | date:'shortTime'}}</h3>\\n    </ion-item>\\n  </ion-list>\\n\\n  <ion-list>\\n    <ion-list-header lines=\\\"none\\\">\\n      <ion-label>Subtask</ion-label>\\n      <ion-button shape=\\\"round\\\" expand=\\\"block\\\" (click)=\\\"addSubtask()\\\">\\n        <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-list-header>\\n    <ion-item-sliding *ngFor=\\\"let subtask of this.task.subtaskArray\\\">\\n      <ion-item lines=\\\"none\\\">\\n        <ion-checkbox\\n          slot=\\\"start\\\"\\n          [(ngModel)]=\\\"subtask.isChecked\\\"\\n          checked=\\\"{{subtask.isChecked}}\\\"\\n          (ionChange)=\\\"check(task)\\\"\\n        ></ion-checkbox>\\n\\n        <p>{{subtask.title}}</p>\\n      </ion-item>\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option (click)=\\\"delete(subtask)\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n        </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n</ion-content>\\n<ion-footer>\\n  <ng-container *ngIf=\\\"subtaskInput\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-input\\n          type=\\\"text\\\"\\n          [(ngModel)]=\\\"subtaskTitle\\\"\\n          placeholder=\\\"New subtask\\\"\\n        ></ion-input>\\n        <ion-button (click)=\\\"enterSubtask()\\\">+</ion-button>\\n      </ion-item>\\n    </ion-list>\\n  </ng-container>\\n</ion-footer>\\n\";"],"sourceRoot":"webpack:///"}