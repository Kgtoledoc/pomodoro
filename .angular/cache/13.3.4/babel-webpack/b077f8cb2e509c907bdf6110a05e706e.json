{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction TaskDetailPage_ion_item_sliding_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item-sliding\")(1, \"ion-item\", 3)(2, \"ion-checkbox\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskDetailPage_ion_item_sliding_25_Template_ion_checkbox_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const subtask_r2 = restoredCtx.$implicit;\n      return subtask_r2.isChecked = $event;\n    })(\"ionChange\", function TaskDetailPage_ion_item_sliding_25_Template_ion_checkbox_ionChange_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.check(ctx_r5.task);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-item-options\", 9)(6, \"ion-item-option\", 10);\n    i0.ɵɵlistener(\"click\", function TaskDetailPage_ion_item_sliding_25_Template_ion_item_option_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const subtask_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.delete(subtask_r2);\n    });\n    i0.ɵɵelement(7, \"ion-icon\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const subtask_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"checked\", subtask_r2.isChecked);\n    i0.ɵɵproperty(\"ngModel\", subtask_r2.isChecked);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(subtask_r2.title);\n  }\n}\n\nfunction TaskDetailPage_ng_container_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-list\")(2, \"ion-item\")(3, \"ion-input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskDetailPage_ng_container_27_Template_ion_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.subtaskTitle = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-button\", 10);\n    i0.ɵɵlistener(\"click\", function TaskDetailPage_ng_container_27_Template_ion_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.enterSubtask();\n    });\n    i0.ɵɵtext(5, \"+\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.subtaskTitle);\n  }\n}\n\nexport let TaskDetailPage = /*#__PURE__*/(() => {\n  class TaskDetailPage {\n    constructor(router, route) {\n      this.router = router;\n      this.route = route;\n    }\n\n    ngOnInit() {\n      this.route.queryParams.subscribe(params => {\n        console.log(params);\n\n        if (params && params.special) {\n          this.task = JSON.parse(params.special);\n        }\n\n        console.log(this.task);\n      });\n      this.subtaskInput = false;\n      this.subtaskTitle = \"\";\n    }\n\n    closeTaskDetail() {\n      this.router.navigate([\"\"]);\n    } //add subtask\n    //refresh the task array with the new task object - other subtask\n\n\n    addSubtask() {\n      console.log(\"Add Subtask\");\n      this.subtaskInput = true;\n    }\n\n    enterSubtask() {\n      console.log(\"subtask \" + this.subtaskTitle);\n      let subtask = {\n        title: this.subtaskTitle,\n        id: uuidv4(),\n        isChecked: false\n      };\n      this.task.subtaskArray.push(subtask);\n      this.subtaskTitle = \"\";\n      this.subtaskInput = false;\n      this.saveSubtaskArray(this.task);\n    }\n\n    check(task) {\n      console.log(task);\n      this.saveSubtaskArray(this.task);\n    } // Function to save the new content of task into scheduledTask\n    // Delete task function\n\n\n    delete(subtask) {\n      this.task.subtaskArray = this.task.subtaskArray.filter(e => {\n        return subtask.id != e.id;\n      });\n      this.saveSubtaskArray(this.task);\n    }\n\n    saveSubtaskArray(taskChanged) {\n      // Load the content of TaskArray\n      let scheduledTask = JSON.parse(localStorage.getItem(\"scheduledTasks\")); // Find the index of object into array\n\n      let index = scheduledTask.findIndex((task, i) => {\n        return task.id === taskChanged.id;\n      }); // Replace the object into index with the new object or only push the task\n\n      scheduledTask.splice(index, 1, taskChanged);\n      console.log(\"Scheduled Task \", scheduledTask); // Save the scheduledTask into LocalStorage\n\n      localStorage.setItem(\"scheduledTasks\", JSON.stringify(scheduledTask));\n    }\n\n  }\n\n  TaskDetailPage.ɵfac = function TaskDetailPage_Factory(t) {\n    return new (t || TaskDetailPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n\n  TaskDetailPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskDetailPage,\n    selectors: [[\"app-task-detail\"]],\n    decls: 28,\n    vars: 8,\n    consts: [[\"slot\", \"start\"], [\"defaultHref\", \"/tasks\"], [3, \"fullscreen\"], [\"lines\", \"none\"], [\"shape\", \"round\", \"expand\", \"block\", 3, \"click\"], [\"slot\", \"end\", \"name\", \"add\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"slot\", \"start\", 3, \"ngModel\", \"checked\", \"ngModelChange\", \"ionChange\"], [\"side\", \"end\"], [3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"trash-outline\"], [\"type\", \"text\", \"placeholder\", \"New subtask\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function TaskDetailPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n        i0.ɵɵelement(3, \"ion-back-button\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Task Detail\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 2)(7, \"ion-list\")(8, \"ion-item\", 3)(9, \"ion-label\");\n        i0.ɵɵtext(10, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"h3\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"ion-item\", 3)(14, \"ion-label\");\n        i0.ɵɵtext(15, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"h3\");\n        i0.ɵɵtext(17);\n        i0.ɵɵpipe(18, \"date\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"ion-list\")(20, \"ion-list-header\", 3)(21, \"ion-label\");\n        i0.ɵɵtext(22, \"Subtask\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"ion-button\", 4);\n        i0.ɵɵlistener(\"click\", function TaskDetailPage_Template_ion_button_click_23_listener() {\n          return ctx.addSubtask();\n        });\n        i0.ɵɵelement(24, \"ion-icon\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(25, TaskDetailPage_ion_item_sliding_25_Template, 8, 3, \"ion-item-sliding\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"ion-footer\");\n        i0.ɵɵtemplate(27, TaskDetailPage_ng_container_27_Template, 6, 1, \"ng-container\", 7);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.task.title);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(18, 5, ctx.task.date, \"shortTime\"));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.task.subtaskArray);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.subtaskInput);\n      }\n    },\n    directives: [i2.IonHeader, i2.IonToolbar, i2.IonButtons, i2.IonBackButton, i2.IonBackButtonDelegate, i2.IonTitle, i2.IonContent, i2.IonList, i2.IonItem, i2.IonLabel, i2.IonListHeader, i2.IonButton, i2.IonIcon, i3.NgForOf, i2.IonItemSliding, i2.IonCheckbox, i2.BooleanValueAccessor, i4.NgControlStatus, i4.NgModel, i2.IonItemOptions, i2.IonItemOption, i2.IonFooter, i3.NgIf, i2.IonInput, i2.TextValueAccessor],\n    pipes: [i3.DatePipe],\n    styles: [\"\"]\n  });\n  return TaskDetailPage;\n})();","map":null,"metadata":{},"sourceType":"module"}