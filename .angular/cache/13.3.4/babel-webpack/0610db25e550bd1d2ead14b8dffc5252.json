{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\n\nvar NativeAudio =\n/** @class */\nfunction (_super) {\n  __extends(NativeAudio, _super);\n\n  function NativeAudio() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NativeAudio.prototype.preloadSimple = function (id, assetPath) {\n    return cordova(this, \"preloadSimple\", {}, arguments);\n  };\n\n  NativeAudio.prototype.preloadComplex = function (id, assetPath, volume, voices, delay) {\n    return cordova(this, \"preloadComplex\", {}, arguments);\n  };\n\n  NativeAudio.prototype.play = function (id, completeCallback) {\n    return cordova(this, \"play\", {\n      \"successIndex\": 1,\n      \"errorIndex\": 2\n    }, arguments);\n  };\n\n  NativeAudio.prototype.stop = function (id) {\n    return cordova(this, \"stop\", {}, arguments);\n  };\n\n  NativeAudio.prototype.loop = function (id) {\n    return cordova(this, \"loop\", {}, arguments);\n  };\n\n  NativeAudio.prototype.unload = function (id) {\n    return cordova(this, \"unload\", {}, arguments);\n  };\n\n  NativeAudio.prototype.setVolumeForComplexAsset = function (id, volume) {\n    return cordova(this, \"setVolumeForComplexAsset\", {}, arguments);\n  };\n\n  NativeAudio.pluginName = \"NativeAudio\";\n  NativeAudio.plugin = \"cordova-plugin-nativeaudio\";\n  NativeAudio.pluginRef = \"plugins.NativeAudio\";\n  NativeAudio.repo = \"https://github.com/floatinghotpot/cordova-plugin-nativeaudio\";\n  NativeAudio.platforms = [\"Android\", \"Browser\", \"iOS\"];\n\n  NativeAudio.ɵfac = /*@__PURE__*/function () {\n    var ɵNativeAudio_BaseFactory;\n    return function NativeAudio_Factory(t) {\n      return (ɵNativeAudio_BaseFactory || (ɵNativeAudio_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NativeAudio)))(t || NativeAudio);\n    };\n  }();\n\n  NativeAudio.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NativeAudio,\n    factory: function (t) {\n      return NativeAudio.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return NativeAudio;\n}(IonicNativePlugin);\n\nexport { NativeAudio }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvbmF0aXZlLWF1ZGlvL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztBQUN4RTtBQUUyQixJQW1DTSwrQkFBaUI7QUFBQztBQUU5QjtBQUF5RTtBQUFNLElBTWxHLG1DQUFhLGFBQUMsRUFBVSxFQUFFLFNBQWlCO0FBS3pCLElBU2xCLG9DQUFjLGFBQUMsRUFBVSxFQUFFLFNBQWlCLEVBQUUsTUFBYyxFQUFFLE1BQWMsRUFBRSxLQUFhO0FBS3hFLElBU25CLDBCQUFJLGFBQUMsRUFBVSxFQUFFLGdCQUEyQjtBQU0zQixJQUlqQiwwQkFBSSxhQUFDLEVBQVU7QUFLTixJQUtULDBCQUFJLGFBQUMsRUFBVTtBQUtOLElBS1QsNEJBQU0sYUFBQyxFQUFVO0FBS04sSUFNWCw4Q0FBd0IsYUFBQyxFQUFVLEVBQUUsTUFBYztBQUlqQjtBQUE0QztBQUF1RDtBQUFtRDtBQUF1RjsrQ0FsRmhSLFVBQVU7Ozs7MEJBQ0w7QUFBQyxzQkF2Q1A7QUFBRSxFQXVDK0IsaUJBQWlCO0FBQ2pELFNBRFksV0FBVztBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG4vKipcbiAqIEBuYW1lIE5hdGl2ZSBBdWRpb1xuICogQGRlc2NyaXB0aW9uIE5hdGl2ZSBBdWRpbyBQbGF5YmFja1xuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBOYXRpdmVBdWRpbyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvbmF0aXZlLWF1ZGlvL25neCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBuYXRpdmVBdWRpbzogTmF0aXZlQXVkaW8pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMubmF0aXZlQXVkaW8ucHJlbG9hZFNpbXBsZSgndW5pcXVlSWQxJywgJ3BhdGgvdG8vZmlsZS5tcDMnKS50aGVuKG9uU3VjY2Vzcywgb25FcnJvcik7XG4gKiB0aGlzLm5hdGl2ZUF1ZGlvLnByZWxvYWRDb21wbGV4KCd1bmlxdWVJZDInLCAncGF0aC90by9maWxlMi5tcDMnLCAxLCAxLCAwKS50aGVuKG9uU3VjY2Vzcywgb25FcnJvcik7XG4gKlxuICogdGhpcy5uYXRpdmVBdWRpby5wbGF5KCd1bmlxdWVJZDEnKS50aGVuKG9uU3VjY2Vzcywgb25FcnJvcik7XG4gKlxuICogLy8gY2FuIG9wdGlvbmFsbHkgcGFzcyBhIGNhbGxiYWNrIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSBmaWxlIGlzIGRvbmUgcGxheWluZ1xuICogdGhpcy5uYXRpdmVBdWRpby5wbGF5KCd1bmlxdWVJZDEnLCAoKSA9PiBjb25zb2xlLmxvZygndW5pcXVlSWQxIGlzIGRvbmUgcGxheWluZycpKTtcbiAqXG4gKiB0aGlzLm5hdGl2ZUF1ZGlvLmxvb3AoJ3VuaXF1ZUlkMicpLnRoZW4ob25TdWNjZXNzLCBvbkVycm9yKTtcbiAqXG4gKiB0aGlzLm5hdGl2ZUF1ZGlvLnNldFZvbHVtZUZvckNvbXBsZXhBc3NldCgndW5pcXVlSWQyJywgMC42KS50aGVuKG9uU3VjY2VzcyxvbkVycm9yKTtcbiAqXG4gKiB0aGlzLm5hdGl2ZUF1ZGlvLnN0b3AoJ3VuaXF1ZUlkMScpLnRoZW4ob25TdWNjZXNzLG9uRXJyb3IpO1xuICpcbiAqIHRoaXMubmF0aXZlQXVkaW8udW5sb2FkKCd1bmlxdWVJZDEnKS50aGVuKG9uU3VjY2VzcyxvbkVycm9yKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdOYXRpdmVBdWRpbycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLW5hdGl2ZWF1ZGlvJyxcbiAgcGx1Z2luUmVmOiAncGx1Z2lucy5OYXRpdmVBdWRpbycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZmxvYXRpbmdob3Rwb3QvY29yZG92YS1wbHVnaW4tbmF0aXZlYXVkaW8nLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdCcm93c2VyJywgJ2lPUyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBOYXRpdmVBdWRpbyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIExvYWRzIGFuIGF1ZGlvIGZpbGUgaW50byBtZW1vcnkuIE9wdGltaXplZCBmb3Igc2hvcnQgY2xpcHMgLyBzaW5nbGUgc2hvdHMgKHVwIHRvIGZpdmUgc2Vjb25kcykuIENhbm5vdCBiZSBzdG9wcGVkIC8gbG9vcGVkLlxuICAgKiBAcGFyYW0gaWQge3N0cmluZ30gdW5pcXVlIElEIGZvciB0aGUgYXVkaW8gZmlsZVxuICAgKiBAcGFyYW0gYXNzZXRQYXRoIHtzdHJpbmd9ICB0aGUgcmVsYXRpdmUgcGF0aCBvciBhYnNvbHV0ZSBVUkwgKGlubHVkaW5nIGh0dHA6Ly8pIHRvIHRoZSBhdWRpbyBhc3NldC5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcHJlbG9hZFNpbXBsZShpZDogc3RyaW5nLCBhc3NldFBhdGg6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIExvYWRzIGFuIGF1ZGlvIGZpbGUgaW50byBtZW1vcnkuIE9wdGltaXplZCBmb3IgYmFja2dyb3VuZCBtdXNpYyAvIGFtYmllbnQgc291bmQuIFVzZXMgaGlnaGxldmVsIG5hdGl2ZSBBUElzIHdpdGggYSBsYXJnZXIgZm9vdHByaW50LiAoaU9TOiBBVkF1ZGlvUGxheWVyKS4gQ2FuIGJlIHN0b3BwZWQgLyBsb29wZWQgYW5kIHVzZWQgd2l0aCBtdWx0aXBsZSB2b2ljZXMuIENhbiBiZSBmYWRlZCBpbiBhbmQgb3V0IHVzaW5nIHRoZSBkZWxheSBwYXJhbWV0ZXIuXG4gICAqIEBwYXJhbSBpZCB7c3RyaW5nfSB1bmlxdWUgSUQgZm9yIHRoZSBhdWRpbyBmaWxlXG4gICAqIEBwYXJhbSBhc3NldFBhdGgge3N0cmluZ30gIHRoZSByZWxhdGl2ZSBwYXRoIG9yIGFic29sdXRlIFVSTCAoaW5sdWRpbmcgaHR0cDovLykgdG8gdGhlIGF1ZGlvIGFzc2V0LlxuICAgKiBAcGFyYW0gdm9sdW1lIHtudW1iZXJ9IHRoZSB2b2x1bWUgb2YgdGhlIHByZWxvYWRlZCBzb3VuZCAoMC4xIHRvIDEuMClcbiAgICogQHBhcmFtIHZvaWNlcyB7bnVtYmVyfSB0aGUgbnVtYmVyIG9mIG11bHRpY2hhbm5lbCB2b2ljZXMgYXZhaWxhYmxlXG4gICAqIEBwYXJhbSBkZWxheSB7bnVtYmVyfVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBwcmVsb2FkQ29tcGxleChpZDogc3RyaW5nLCBhc3NldFBhdGg6IHN0cmluZywgdm9sdW1lOiBudW1iZXIsIHZvaWNlczogbnVtYmVyLCBkZWxheTogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUGxheXMgYW4gYXVkaW8gYXNzZXRcbiAgICogQHBhcmFtIGlkIHtzdHJpbmd9IHVuaXF1ZSBJRCBmb3IgdGhlIGF1ZGlvIGZpbGVcbiAgICogQHBhcmFtIGNvbXBsZXRlQ2FsbGJhY2sge0Z1bmN0aW9ufSBvcHRpb25hbC4gQ2FsbGJhY2sgdG8gYmUgaW52b2tlZCB3aGVuIGF1ZGlvIGlzIGRvbmUgcGxheWluZ1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN1Y2Nlc3NJbmRleDogMSxcbiAgICBlcnJvckluZGV4OiAyLFxuICB9KVxuICBwbGF5KGlkOiBzdHJpbmcsIGNvbXBsZXRlQ2FsbGJhY2s/OiBGdW5jdGlvbik6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3BzIHBsYXlpbmcgYW4gYXVkaW9cbiAgICogQHBhcmFtIGlkIHtzdHJpbmd9IHVuaXF1ZSBJRCBmb3IgdGhlIGF1ZGlvIGZpbGVcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc3RvcChpZDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogTG9vcHMgYW4gYXVkaW8gYXNzZXQgaW5maW5pdGVseSwgdGhpcyBvbmx5IHdvcmtzIGZvciBjb21wbGV4IGFzc2V0c1xuICAgKiBAcGFyYW0gaWQge3N0cmluZ30gdW5pcXVlIElEIGZvciB0aGUgYXVkaW8gZmlsZVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGxvb3AoaWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFVubG9hZHMgYW4gYXVkaW8gZmlsZSBmcm9tIG1lbW9yeVxuICAgKiBAcGFyYW0gaWQge3N0cmluZ30gdW5pcXVlIElEIGZvciB0aGUgYXVkaW8gZmlsZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICB1bmxvYWQoaWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZXMgdGhlIHZvbHVtZSBmb3IgcHJlbG9hZGVkIGNvbXBsZXggYXNzZXRzLlxuICAgKiBAcGFyYW0gaWQge3N0cmluZ30gdW5pcXVlIElEIGZvciB0aGUgYXVkaW8gZmlsZVxuICAgKiBAcGFyYW0gdm9sdW1lIHtudW1iZXJ9IHRoZSB2b2x1bWUgb2YgdGhlIGF1ZGlvIGFzc2V0ICgwLjEgdG8gMS4wKVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXRWb2x1bWVGb3JDb21wbGV4QXNzZXQoaWQ6IHN0cmluZywgdm9sdW1lOiBudW1iZXIpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19","map":null,"metadata":{},"sourceType":"module"}