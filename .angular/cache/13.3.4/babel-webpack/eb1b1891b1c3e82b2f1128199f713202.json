{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { NewExpensePage } from \"../pages/new-expense/new-expense.page\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common\";\n\nfunction Tab3Page_ion_list_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\", 12)(1, \"ion-item-sliding\")(2, \"ion-item\")(3, \"ion-grid\", 13)(4, \"ion-row\")(5, \"ion-col\", 14)(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ion-col\", 15)(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"currency\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"ion-col\", 16)(13, \"p\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"date\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n\n  if (rf & 2) {\n    const expense_r1 = ctx.$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(expense_r1.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(11, 3, expense_r1.price, \"COP \", \"symbol\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 7, expense_r1.date, \"shortDate\"));\n  }\n}\n\nexport let Tab3Page = /*#__PURE__*/(() => {\n  class Tab3Page {\n    constructor(modalController, alertController) {\n      this.modalController = modalController;\n      this.alertController = alertController;\n      this.flagMonthlySalary = false;\n    }\n\n    ngOnInit() {\n      const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      this.monthlySalary = JSON.parse(localStorage.getItem('monthlySalary')) ? JSON.parse(localStorage.getItem('monthlySalary')) : null;\n\n      if (this.monthlySalary == null) {\n        this.presentAlertPrompt();\n      }\n\n      this.month = monthNames[new Date().getMonth()];\n      let totalExpensesArrayStored = JSON.parse(localStorage.getItem(\"expensesArray\")) ? JSON.parse(localStorage.getItem(\"expensesArray\")) : [];\n      this.expensesArray = totalExpensesArrayStored.filter(e => {\n        let month = monthNames[new Date(e.date).getMonth()];\n        return this.month == month;\n      });\n      this.extractTotal(this.expensesArray);\n    }\n\n    addExpenses() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: NewExpensePage\n        });\n        modal.onDidDismiss().then(d => {\n          if (d.data[\"dismissed\"] != true) {\n            console.log(d);\n            this.expensesArray.push(d.data);\n            localStorage.setItem(\"expensesArray\", JSON.stringify(this.expensesArray));\n            this.extractTotal(this.expensesArray);\n          }\n        });\n        return yield modal.present();\n      });\n    }\n\n    extractTotal(array) {\n      let total = 0;\n      array.forEach(e => {\n        total = total + e.price;\n        return total;\n      });\n      console.log(total);\n      this.totalExpensesMonthly = total;\n    }\n\n    presentAlertPrompt() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: \"my-custom-class\",\n          header: \"Ingrese el valor del salario:\",\n          inputs: [{\n            name: \"salary\",\n            type: \"number\"\n          }],\n          buttons: [{\n            text: \"Cancel\",\n            role: \"cancel\",\n            cssClass: \"secondary\",\n            handler: () => {\n              console.log(\"Confirm Cancel\");\n            }\n          }, {\n            text: \"Ok\",\n            handler: data => {\n              this.monthlySalary = data.salary;\n              this.saveMonthlySalary();\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n\n    saveMonthlySalary() {\n      localStorage.setItem(\"monthlySalary\", JSON.stringify(this.monthlySalary));\n    }\n\n  }\n\n  Tab3Page.ɵfac = function Tab3Page_Factory(t) {\n    return new (t || Tab3Page)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i1.AlertController));\n  };\n\n  Tab3Page.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Tab3Page,\n    selectors: [[\"app-tab3\"]],\n    decls: 29,\n    vars: 14,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"slot\", \"end\"], [3, \"click\"], [\"name\", \"filter-outline\"], [1, \"ion-align-items-center\", \"content-header\"], [\"size\", \"4\"], [3, \"fullscreen\"], [\"lines\", \"full\", 4, \"ngFor\", \"ngForOf\"], [\"vertical\", \"bottom\", \"horizontal\", \"end\", \"slot\", \"fixed\"], [\"size\", \"small\", \"color\", \"secondary\", 3, \"click\"], [\"name\", \"add\"], [\"lines\", \"full\"], [1, \"content-task\"], [\"size\", \"4\", 1, \"start-side-class\"], [\"size\", \"4\", 1, \"center-side-class\"], [\"size\", \"4\", 1, \"end-side-class\"]],\n    template: function Tab3Page_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Lista de Gastos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 1);\n        i0.ɵɵelement(5, \"ion-menu-button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-buttons\", 2)(7, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function Tab3Page_Template_ion_button_click_7_listener() {\n          return ctx.presentAlertPrompt();\n        });\n        i0.ɵɵelement(8, \"ion-icon\", 4);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(9, \"ion-header\")(10, \"ion-grid\")(11, \"ion-row\", 5)(12, \"ion-col\", 6)(13, \"p\");\n        i0.ɵɵtext(14);\n        i0.ɵɵpipe(15, \"currency\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"ion-col\", 6)(17, \"p\");\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"ion-col\", 6)(20, \"p\");\n        i0.ɵɵtext(21);\n        i0.ɵɵpipe(22, \"currency\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(23, \"ion-content\", 7)(24, \"ion-grid\");\n        i0.ɵɵtemplate(25, Tab3Page_ion_list_25_Template, 16, 10, \"ion-list\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"ion-fab\", 9)(27, \"ion-fab-button\", 10);\n        i0.ɵɵlistener(\"click\", function Tab3Page_Template_ion_fab_button_click_27_listener() {\n          return ctx.addExpenses();\n        });\n        i0.ɵɵelement(28, \"ion-icon\", 11);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(14);\n        i0.ɵɵtextInterpolate1(\"Salario \", i0.ɵɵpipeBind3(15, 6, ctx.monthlySalary, \"COP \", \"symbol\"), \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.month);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Total Gastos \", i0.ɵɵpipeBind3(22, 10, ctx.totalExpensesMonthly, \"COP \", \"symbol\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"fullscreen\", false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.expensesArray);\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonTitle, i1.IonButtons, i1.IonMenuButton, i1.IonButton, i1.IonIcon, i1.IonGrid, i1.IonRow, i1.IonCol, i1.IonContent, i2.NgForOf, i1.IonList, i1.IonItemSliding, i1.IonItem, i1.IonFab, i1.IonFabButton],\n    pipes: [i2.CurrencyPipe, i2.DatePipe],\n    styles: [\"ion-label[_ngcontent-%COMP%]{text-align:center}ion-list-header[_ngcontent-%COMP%]{margin-top:0}.content-header[_ngcontent-%COMP%]{font-size:.8em;text-align:center;font-weight:600}.content-task[_ngcontent-%COMP%]{font-size:.7em}\"]\n  });\n  return Tab3Page;\n})();","map":null,"metadata":{},"sourceType":"module"}