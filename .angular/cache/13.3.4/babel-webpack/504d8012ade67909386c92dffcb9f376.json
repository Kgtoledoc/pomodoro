{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { NewGoalsPage } from \"../pages/new-goals/new-goals.page\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@ionic-native/native-audio/ngx\";\nimport * as i3 from \"@ionic-native/text-to-speech/ngx\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction Tab1Page_ion_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-grid\", 7)(2, \"ion-row\", 8)(3, \"ion-col\", 9)(4, \"ion-checkbox\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function Tab1Page_ion_item_9_Template_ion_checkbox_ngModelChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      return task_r1.isChecked = $event;\n    })(\"ionChange\", function Tab1Page_ion_item_9_Template_ion_checkbox_ionChange_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.check(task_r1);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-col\", 11)(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ion-col\", 12)(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"checked\", task_r1.isChecked);\n    i0.ɵɵproperty(\"ngModel\", task_r1.isChecked);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.taskTitle);\n  }\n}\n\nexport let Tab1Page = /*#__PURE__*/(() => {\n  class Tab1Page {\n    constructor(alertController, nativeAudio, platform, tts, modalController) {\n      this.alertController = alertController;\n      this.nativeAudio = nativeAudio;\n      this.platform = platform;\n      this.tts = tts;\n      this.modalController = modalController;\n    }\n\n    ngOnInit() {\n      this.taskStored = JSON.parse(localStorage.getItem(\"scheduledTasks\")) ? JSON.parse(localStorage.getItem(\"scheduledTasks\")) : [];\n      console.log(this.taskStored);\n      this.taskObjectArray = this.extractTaskFromScheduledTask(this.taskStored);\n    }\n\n    ionViewWillEnter() {\n      this.taskStored = JSON.parse(localStorage.getItem(\"scheduledTasks\")) ? JSON.parse(localStorage.getItem(\"scheduledTasks\")) : [];\n      console.log(this.taskStored);\n      console.log(this.extractTaskFromScheduledTask(this.taskStored));\n      this.taskObjectArray = this.extractTaskFromScheduledTask(this.taskStored);\n    } // Function for open a modal and save the goal created\n\n\n    createSubtask() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: NewGoalsPage\n        });\n        modal.onDidDismiss().then(goal => {\n          console.log(goal);\n\n          if (goal.data[\"dismissed\"] != true) {\n            this.taskStored = JSON.parse(localStorage.getItem(\"scheduledTasks\")) ? JSON.parse(localStorage.getItem(\"scheduledTasks\")) : [];\n          }\n        });\n        return yield modal.present();\n      });\n    }\n\n    extractTaskFromScheduledTask(array) {\n      let arr = [];\n      array.forEach(e => {\n        e.subtaskArray.forEach(element => {\n          arr.push(Object.assign(Object.assign({}, element), {\n            taskTitle: e.title\n          }));\n        });\n      });\n      return arr;\n    }\n\n  }\n\n  Tab1Page.ɵfac = function Tab1Page_Factory(t) {\n    return new (t || Tab1Page)(i0.ɵɵdirectiveInject(i1.AlertController), i0.ɵɵdirectiveInject(i2.NativeAudio), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i3.TextToSpeech), i0.ɵɵdirectiveInject(i1.ModalController));\n  };\n\n  Tab1Page.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Tab1Page,\n    selectors: [[\"app-tab1\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [3, \"fullscreen\"], [4, \"ngFor\", \"ngForOf\"], [\"vertical\", \"bottom\", \"horizontal\", \"end\", \"slot\", \"fixed\"], [\"size\", \"small\", 3, \"click\"], [\"name\", \"add\"], [1, \"content-task\"], [1, \"ion-align-items-center\"], [\"size\", \"2\"], [3, \"ngModel\", \"checked\", \"ngModelChange\", \"ionChange\"], [\"size\", \"6\"], [\"size\", \"4\"]],\n    template: function Tab1Page_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \" Lista de Tareas \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 1);\n        i0.ɵɵelement(5, \"ion-menu-button\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 2)(7, \"ion-grid\")(8, \"ion-list\");\n        i0.ɵɵtemplate(9, Tab1Page_ion_item_9_Template, 11, 4, \"ion-item\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"ion-fab\", 4)(11, \"ion-fab-button\", 5);\n        i0.ɵɵlistener(\"click\", function Tab1Page_Template_ion_fab_button_click_11_listener() {\n          return ctx.createSubtask();\n        });\n        i0.ɵɵelement(12, \"ion-icon\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.taskObjectArray);\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonTitle, i1.IonButtons, i1.IonMenuButton, i1.IonContent, i1.IonGrid, i1.IonList, i4.NgForOf, i1.IonItem, i1.IonRow, i1.IonCol, i1.IonCheckbox, i1.BooleanValueAccessor, i5.NgControlStatus, i5.NgModel, i1.IonFab, i1.IonFabButton, i1.IonIcon],\n    styles: [\"#progress-circle[_ngcontent-%COMP%]{margin-top:50px;transform:rotate(-90deg)}.timer-text[_ngcontent-%COMP%]{transform:rotate(90deg);transform-origin:center;font-size:36px;text-anchor:middle;font-weight:600;fill:#333}.footer[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]{font-size:20px;font-weight:600;height:25px}.footer[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{height:50px}.timer-icons[_ngcontent-%COMP%]{margin-top:-20vh;height:5vh;width:100vw;fill:var(--ion-color-secondary)}\"]\n  });\n  return Tab1Page;\n})();","map":null,"metadata":{},"sourceType":"module"}