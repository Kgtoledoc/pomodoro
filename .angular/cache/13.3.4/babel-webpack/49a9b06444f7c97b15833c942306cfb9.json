{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/forms\";\nexport let NewTasksPage = /*#__PURE__*/(() => {\n  class NewTasksPage {\n    constructor(modalController, toastCtrl) {\n      this.modalController = modalController;\n      this.toastCtrl = toastCtrl;\n      this.title = \"\";\n      this.date = \"\";\n    }\n\n    ngOnInit() {}\n\n    presentToast(text) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastCtrl.create({\n          message: text,\n          duration: 3000,\n          position: \"bottom\"\n        });\n        toast.present();\n      });\n    }\n\n    dismiss() {\n      this.modalController.dismiss({\n        dismissed: true\n      });\n    }\n\n    do(event) {\n      console.log(\"Event\", event);\n    }\n\n    createTasks() {\n      if (this.title.length > 0 && this.date.length > 0) {\n        let seconds = this.date.split(\":\")[2].split(\".\");\n        seconds.splice(0, 1, \"00\");\n        let secondsModified = seconds.join(\".\");\n        let dateArray = this.date.split(\":\");\n        dateArray.splice(2, 1, secondsModified);\n        let dateModified = dateArray.join(\":\");\n        let task = {\n          title: this.title,\n          date: new Date(dateModified),\n          isChecked: false,\n          id: uuidv4(),\n          subtaskArray: []\n        };\n        this.modalController.dismiss(task);\n      } else if (this.title.length > 0) {\n        let task = {\n          title: this.title,\n          date: undefined,\n          isChecked: false,\n          id: uuidv4(),\n          subtaskArray: []\n        };\n        this.modalController.dismiss(task);\n      } else {\n        this.presentToast(\"Llenar todos los campos\");\n      }\n    }\n\n  }\n\n  NewTasksPage.ɵfac = function NewTasksPage_Factory(t) {\n    return new (t || NewTasksPage)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i1.ToastController));\n  };\n\n  NewTasksPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewTasksPage,\n    selectors: [[\"app-new-tasks\"]],\n    decls: 20,\n    vars: 3,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"color\", \"dark\", 3, \"click\"], [\"name\", \"arrow-back\"], [\"type\", \"text\", 1, \"end-side-class\", 3, \"ngModel\", \"ngModelChange\"], [\"display-format\", \"HH:mm\", \"picker-format\", \"HH:mm\", \"hourValues\", \"4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21\", \"minuteValues\", \"0,10,20,30,40\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [\"expand\", \"block\", 3, \"click\"]],\n    template: function NewTasksPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1)(3, \"ion-button\", 2);\n        i0.ɵɵlistener(\"click\", function NewTasksPage_Template_ion_button_click_3_listener() {\n          return ctx.dismiss();\n        });\n        i0.ɵɵelement(4, \"ion-icon\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-title\");\n        i0.ɵɵtext(6, \" Nueva Actividad \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"ion-content\")(8, \"ion-list\")(9, \"ion-item\")(10, \"ion-label\");\n        i0.ɵɵtext(11, \"Actividad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function NewTasksPage_Template_ion_input_ngModelChange_12_listener($event) {\n          return ctx.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"ion-item\")(14, \"ion-label\");\n        i0.ɵɵtext(15, \"Inicio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-datetime\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function NewTasksPage_Template_ion_datetime_ngModelChange_16_listener($event) {\n          return ctx.date = $event;\n        })(\"ionChange\", function NewTasksPage_Template_ion_datetime_ionChange_16_listener($event) {\n          return ctx.do($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(17, \"ion-footer\")(18, \"ion-button\", 6);\n        i0.ɵɵlistener(\"click\", function NewTasksPage_Template_ion_button_click_18_listener() {\n          return ctx.createTasks();\n        });\n        i0.ɵɵtext(19, \"Crear Actividad\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.date);\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonButtons, i1.IonButton, i1.IonIcon, i1.IonTitle, i1.IonContent, i1.IonList, i1.IonItem, i1.IonLabel, i1.IonInput, i1.TextValueAccessor, i2.NgControlStatus, i2.NgModel, i1.IonDatetime, i1.SelectValueAccessor, i1.IonFooter],\n    styles: [\"\"]\n  });\n  return NewTasksPage;\n})();","map":null,"metadata":{},"sourceType":"module"}